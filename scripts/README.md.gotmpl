# Istio Auth Gateway

{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

Istio Auth Gateway is a Helm Chart that integrates [Istio](https://github.com/istio/istio) and [Keycloak](https://github.com/keycloak/keycloak) to perform OIDC-based user authentication transparently.

This is a kind of authentication gateway using Istio that allows you to grant user authentication features to client applications that do not have them.

## Prerequisites

- [Kubernetes](https://github.com/kubernetes/kubernetes) 1.22.0 - 1.23.1
- [Helm](https://github.com/helm/helm) 3.0.0 - 3.10.0
- [Istio](https://github.com/istio/istio) 1.5.0 - 1.15.1
- [Keycloak](https://github.com/keycloak/keycloak) 1.18.0 - 19.0.2-legacy
- [Optional] [Keycloak Operator](https://github.com/keycloak/keycloak-operator) 17.0.0 - 19.0.2-legacy
    - For auto-generation of Realm and Client. See [Use your own Realm and Client](#use-your-own-realm-and-client) for the details.

## Getting started

To deploy Istio Auth Gateway with the auto-generated Realm and Client, do the below.

```sh
helm install my-release --install --wait istio-auth-gateway/istio-auth-gateway \
    --set endpoint.namespace="istio-system" \
    --set keycloak.namespace="keycloak" \
    --set endpoint.frontendUrl="https://istio.example.com" \
    --set keycloak.frontendUrl="https://keycloak.example.com:8443" \
    --set endpoint.labels.app="my-sample-app"
```

The parameters mean the below(See [Values](#values) for the details).

- `endpoint.namespace` is the Namespace where an endpoint(istio-proxy) is deployed. `keycloak.namespace` is for Keycloak Operator
- `endpoint.frontendUrl` is the URL to access endpoint(istio-proxy) with a browser. `keycloak.frontendUrl` is for Keycloak
- `endpoint.labels` are the labels set for the endpoint(istio-proxy) Pod.

After deployment, access `endpoint.frontendUrl(https://istio.example.com)` in your browser and you will be redirected to the Keycloak login page.

Enter `sample` in username and password and you can access the client application.

## Architecture

<img src="./img/architecture.svg" alt="Figure of architecture and resources deployed in the chart">

Istio Auth Gateway forwards user requests to the endpoint to the gateway using an EnvoyFilter.

## Features

- End-user authentication using OpenID Connect [OAuth2 Proxy](https://github.com/oauth2-proxy/oauth2-proxy)
    - Both Istio's ingress gateway and sidecar proxy can be set as an endpoint.
- Propagate user information to client application(See [`gateway.oauth2Proxy.xAuthRequest`](#values))
- Request and authentication logging(See [`gateway.oauth2Proxy.logging.*`](#values))
- Generate Realm and Client in a Keycloak(See [`keycloak.*`](#values))

To be provided in the future.

- Set multiple users to log in
- Gateway redundancy
- Sample client application
- Istio Ingress Gateway as an endpoint
- Gateway for Open Policy Agent version

## Installation details

### Change parameters

Each parameter can also be applied using a file. For details, please refer to [values.yaml](. /values.yaml).

```sh
cat <<EOF > myValues.yaml
endpoint:
  namespace: istio-system
  frontendUrl: "https://istio.example.com"
  labels:
    app: "my-sample-app"
keycloak:
  namespace: keycloak
  frontendUrl: "https://keycloak.example.com:8443"
  realm:
    sample:
      user:
        name: "john"
        password: "passw0rd"
EOF
helm install my-release istio-auth-gateway/istio-auth-gateway -n keycloak -f ./myValues.yaml
```

### Use your own Realm and Client

If you are using an existing Realm and Client, turn off the generating feature and specify a Secret resource with `CLIENT_ID` and `CLIENT_SECRET` in `keycloak.client.secret`. In this case, Keycloak Operator is not required.

```sh
# Create secret
kubectl create secret generic myclient --namespace keycloak \
    --from-literal=CLIENT_ID=<YOUR_CLIENT_ID> \
    --from-literal=CLIENT_SECRET=<YOUR_CLIENT_SECRET>

# Deploy istio-auth-gateway
cat <<EOF > myValues.yaml
endpoint:
  namespace: istio-system
  frontendUrl: "https://istio.example.com"
  labels:
    app: "my-sample-app"
keycloak:
  namespace: keycloak
  frontendUrl: "https://keycloak.example.com:8443"
  realm:
    sample:
      create: false
  client:
    secret: "myclient"
    sample:
      create: false
EOF
helm install my-release istio-auth-gateway/istio-auth-gateway -n keycloak -f ./myValues.yaml
```

## Uninstalling

You can uninstall components of istio-auth-gateway installed above.

```sh
helm ls
helm delete my-release
```

If you have deployed a Secret of `CLIENT_ID` and `CLIENT_SECRET`, delete it as well.

```sh
kubectl delete secret myclient --namespace keycloak
```

{{ template "chart.valuesSection" . }}

## Contributing

Please feel free to submit Issues and Pull Requests.

## License

Copyright 2022 Istio Auth Gateway Authors.

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at

```sh
http://www.apache.org/licenses/LICENSE-2.0
```

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

{{ template "helm-docs.versionFooter" . }}
